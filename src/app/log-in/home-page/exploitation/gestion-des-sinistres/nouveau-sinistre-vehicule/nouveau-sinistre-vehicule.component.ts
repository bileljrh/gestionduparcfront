import {Component, Inject} from '@angular/core';
import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';
import {ExploitationServiceService} from '../../exploitation-service.service';
import {MatSnackBar} from '@angular/material/snack-bar';
import {FormControl, FormGroup, Validators} from '@angular/forms';
import {SelectVehicule} from '../../../administratif/vehicules/select-vehicule';
import {NewSinistre} from '../new-sinistre';
import moment from 'moment';


@Component({
  selector: 'app-nouveau-sinistre-vehicule',
  templateUrl: './nouveau-sinistre-vehicule.component.html',
  styleUrls: ['./nouveau-sinistre-vehicule.component.scss'],
  providers: [MatSnackBar]
})
export class NouveauSinistreVehiculeComponent {
  newSinistre: NewSinistre = {
    idVehicule: null,
    dateSinistre: '',
    numeroSinistre: '',
    lieuSinistre: '',
    causeSinistre: '',
    natureSinistre: '',
    tier: '',
    adresseAssurance: '',
    assurance: '',
    circule: false,
    agePermis: 0
  };
  listVehicule: SelectVehicule[] = [];
  nouveauSinistreForm = new FormGroup({
    numeroPlaque: new FormControl(null, Validators.required),
    dateSinistre: new FormControl(null),
    lieuSinistre: new FormControl(null),
    causeSinistre: new FormControl(null, Validators.required),
    natureSinistre: new FormControl(null),
    numeroSinistre: new FormControl(null),
    tier: new FormControl(null),
    adresse: new FormControl(null),
    assurance: new FormControl(null),
    circule: new FormControl(null),
    tiers: new FormControl(null),
    agePermis: new FormControl(null)
  });
  get f() { return this.nouveauSinistreForm.controls; }

  snackBarFailureLoadingMsg = 'Probl√®me de chargement, actualiser la page s\'il vous plait';
  nomBeneficiaire = '';
  matriculeBeneficiaire = '';

  constructor(public dialogRef: MatDialogRef<NouveauSinistreVehiculeComponent>, @Inject(MAT_DIALOG_DATA) public data, private Exploitation: ExploitationServiceService, private snackBar: MatSnackBar) {
    this.Exploitation.getSelectVehiculeByStrucutureForSinistre().subscribe(value => {
      this.listVehicule = value;
    });
    this.nouveauSinistreForm.controls.numeroPlaque.valueChanges.subscribe(value => {
      if (value.nomBeneficiaire === null) {
        this.nomBeneficiaire = '';
        this.matriculeBeneficiaire = '';
      } else {
        this.nomBeneficiaire = value.nomBeneficiaire;
        this.matriculeBeneficiaire = value.matriculeBeneficiaire;
      }
    });
  }

  closeDialog() {
    this.dialogRef.close();
  }

  onCancel() {
    this.dialogRef.close();
  }

  onConfirm() {
    if (this.nouveauSinistreForm.valid) {
      this.patchFinalValue();
      this.dialogRef.close(this.newSinistre);
    }
  }

  patchFinalValue() {
    this.newSinistre = {
      idVehicule: this.nouveauSinistreForm.value.numeroPlaque.id,
      dateSinistre: '',
      numeroSinistre: this.nouveauSinistreForm.value.numeroSinistre,
      lieuSinistre: this.nouveauSinistreForm.value.lieuSinistre,
      causeSinistre: this.nouveauSinistreForm.value.causeSinistre,
      natureSinistre: this.nouveauSinistreForm.value.natureSinistre,
      tier: this.nouveauSinistreForm.value.tiers,
      adresseAssurance: this.nouveauSinistreForm.value.adresse,
      assurance: this.nouveauSinistreForm.value.assurance,
      circule: this.nouveauSinistreForm.value.circule,
      agePermis: this.nouveauSinistreForm.value.agePermis
    };
    if (this.nouveauSinistreForm.value.dateSinistre != null) {
      this.newSinistre.dateSinistre = moment(this.nouveauSinistreForm.value.dateSinistre as Date).format('YYYY-MM-DD');
    }
  }

}
