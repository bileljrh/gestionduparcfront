import {Component, Inject} from '@angular/core';
import {FormControl, FormGroup, Validators} from '@angular/forms';
import {ListBeneficiaireStrucuture} from '../list-beneficiaire-strucuture';
import {NewEmpruntVehicule} from '../new-emprunt-vehicule';
import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';
import moment from 'moment';

@Component({
  selector: 'app-modify-emprunt-vehicule',
  templateUrl: './modify-emprunt-vehicule.component.html',
  styleUrls: ['./modify-emprunt-vehicule.component.scss']
})
export class ModifyEmpruntVehiculeComponent {
  modifiedEmpruntForm = new FormGroup({
    dateEmprunt: new FormControl(Validators.required),
    dateRetourPrevu: new FormControl(Validators.required),
    dateRetourEffective: new FormControl(Validators.required)
  });
  listBeneficiaireEmprunt: ListBeneficiaireStrucuture[] = [];
  listStructureEmprunt: string [] = [];
  modifiedEmprunt: NewEmpruntVehicule = {
    idVehicule: null,
    idBeneficiaireEmprunt: null,
    dateEmprunt: '',
    confirmed: false,
    dateRetourPrevu: '',
    dateRetourEffective: '',
  };

  constructor(public dialogRef: MatDialogRef<ModifyEmpruntVehiculeComponent>, @Inject(MAT_DIALOG_DATA) public data) {
    this.patchInitialValues();
  }


  closeDialog() {
    this.dialogRef.close();
  }

  onCancel() {
    this.dialogRef.close();
  }

  onConfirm() {
    if (this.modifiedEmpruntForm.valid) {
      this.patchFinalValues();
      this.dialogRef.close(this.modifiedEmprunt);
    }
  }

  patchFinalValues() {
    this.modifiedEmprunt.dateEmprunt = moment(this.modifiedEmpruntForm.value.dateEmprunt as Date).format('YYYY-MM-DD');
    if (this.modifiedEmpruntForm.value.dateRetourPrevu != null) {
      this.modifiedEmprunt.dateRetourPrevu = moment(this.modifiedEmpruntForm.value.dateRetourPrevu as Date).format('YYYY-MM-DD');
    }
    if (this.modifiedEmpruntForm.value.dateRetourEffective != null) {
      this.modifiedEmprunt.dateRetourEffective = moment(this.modifiedEmpruntForm.value.dateRetourEffective as Date).format('YYYY-MM-DD');
    }
  }

  patchInitialValues() {
    this.modifiedEmprunt.id = this.data.element.id;
    this.modifiedEmpruntForm.controls.dateEmprunt.patchValue(this.data.element.dateEmprunt);
    this.modifiedEmpruntForm.controls.dateRetourPrevu.patchValue(this.data.element.dateRetourPrevu);
    this.modifiedEmpruntForm.controls.dateRetourEffective.patchValue(this.data.element.dateRetourEffective);
  }

}
